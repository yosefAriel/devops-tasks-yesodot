// Code generated by protoc-gen-go. DO NOT EDIT.
// source: delegation-service/delegation.proto

package delegation

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserByIDRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserByIDRequest) Reset()         { *m = GetUserByIDRequest{} }
func (m *GetUserByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserByIDRequest) ProtoMessage()    {}
func (*GetUserByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aa182ee9731934d, []int{0}
}

func (m *GetUserByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserByIDRequest.Unmarshal(m, b)
}
func (m *GetUserByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetUserByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserByIDRequest.Merge(m, src)
}
func (m *GetUserByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserByIDRequest.Size(m)
}
func (m *GetUserByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserByIDRequest proto.InternalMessageInfo

func (m *GetUserByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mail                 string   `protobuf:"bytes,2,opt,name=mail,proto3" json:"mail,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FullName             string   `protobuf:"bytes,5,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Hierarchy            string   `protobuf:"bytes,6,opt,name=hierarchy,proto3" json:"hierarchy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aa182ee9731934d, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetHierarchy() string {
	if m != nil {
		return m.Hierarchy
	}
	return ""
}

type GetUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aa182ee9731934d, []int{2}
}

func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserResponse.Unmarshal(m, b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
}
func (m *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(m, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserResponse.Size(m)
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type FindUserByNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUserByNameRequest) Reset()         { *m = FindUserByNameRequest{} }
func (m *FindUserByNameRequest) String() string { return proto.CompactTextString(m) }
func (*FindUserByNameRequest) ProtoMessage()    {}
func (*FindUserByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aa182ee9731934d, []int{3}
}

func (m *FindUserByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserByNameRequest.Unmarshal(m, b)
}
func (m *FindUserByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserByNameRequest.Marshal(b, m, deterministic)
}
func (m *FindUserByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserByNameRequest.Merge(m, src)
}
func (m *FindUserByNameRequest) XXX_Size() int {
	return xxx_messageInfo_FindUserByNameRequest.Size(m)
}
func (m *FindUserByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserByNameRequest proto.InternalMessageInfo

func (m *FindUserByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FindUserByNameResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUserByNameResponse) Reset()         { *m = FindUserByNameResponse{} }
func (m *FindUserByNameResponse) String() string { return proto.CompactTextString(m) }
func (*FindUserByNameResponse) ProtoMessage()    {}
func (*FindUserByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aa182ee9731934d, []int{4}
}

func (m *FindUserByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserByNameResponse.Unmarshal(m, b)
}
func (m *FindUserByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserByNameResponse.Marshal(b, m, deterministic)
}
func (m *FindUserByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserByNameResponse.Merge(m, src)
}
func (m *FindUserByNameResponse) XXX_Size() int {
	return xxx_messageInfo_FindUserByNameResponse.Size(m)
}
func (m *FindUserByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserByNameResponse proto.InternalMessageInfo

func (m *FindUserByNameResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserByIDRequest)(nil), "delegation.GetUserByIDRequest")
	proto.RegisterType((*User)(nil), "delegation.User")
	proto.RegisterType((*GetUserResponse)(nil), "delegation.GetUserResponse")
	proto.RegisterType((*FindUserByNameRequest)(nil), "delegation.FindUserByNameRequest")
	proto.RegisterType((*FindUserByNameResponse)(nil), "delegation.FindUserByNameResponse")
}

func init() {
	proto.RegisterFile("delegation-service/delegation.proto", fileDescriptor_7aa182ee9731934d)
}

var fileDescriptor_7aa182ee9731934d = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x4d, 0x9b, 0x16, 0x33, 0x85, 0x2a, 0x03, 0x4a, 0x68, 0x55, 0xea, 0x5a, 0x44, 0x10,
	0x2b, 0xd4, 0x83, 0x57, 0x91, 0xa2, 0x08, 0xe2, 0xa1, 0xe0, 0xc1, 0x93, 0xac, 0xcd, 0xd4, 0x2e,
	0xe4, 0x4f, 0xdd, 0x4d, 0x84, 0x3e, 0x8e, 0x0f, 0xe1, 0xfb, 0x49, 0x66, 0x9b, 0x36, 0xd6, 0xe0,
	0x6d, 0xf9, 0x7e, 0xdf, 0xce, 0x7c, 0x33, 0xbb, 0x70, 0x12, 0x50, 0x48, 0xef, 0x32, 0x55, 0x49,
	0x7c, 0x61, 0x48, 0x7f, 0xaa, 0x09, 0x5d, 0xae, 0xa5, 0xc1, 0x5c, 0x27, 0x69, 0x82, 0xb0, 0x56,
	0x44, 0x1f, 0xf0, 0x9e, 0xd2, 0x67, 0x43, 0xfa, 0x76, 0xf1, 0x30, 0x1a, 0xd3, 0x47, 0x46, 0x26,
	0xc5, 0x36, 0xd4, 0x54, 0xe0, 0x3b, 0x3d, 0xe7, 0xcc, 0x1b, 0xd7, 0x54, 0x20, 0xbe, 0x1c, 0x70,
	0x73, 0xcf, 0x26, 0x40, 0x04, 0x37, 0x92, 0x2a, 0xf4, 0x6b, 0xac, 0xf0, 0x19, 0x0f, 0x01, 0xa6,
	0x4a, 0x9b, 0xf4, 0x35, 0x96, 0x11, 0xf9, 0x75, 0x26, 0x1e, 0x2b, 0x4f, 0x32, 0x22, 0xec, 0x82,
	0x17, 0xca, 0x82, 0xba, 0x4c, 0xb7, 0x73, 0xa1, 0x80, 0xd3, 0x2c, 0x0c, 0x2d, 0x6c, 0x58, 0x98,
	0x0b, 0x0c, 0x0f, 0xc0, 0x9b, 0x29, 0xd2, 0x52, 0x4f, 0x66, 0x0b, 0xbf, 0x69, 0xeb, 0xae, 0x04,
	0x71, 0x0d, 0x3b, 0xcb, 0x49, 0xc6, 0x64, 0xe6, 0x49, 0x6c, 0x08, 0xfb, 0xe0, 0x66, 0x86, 0x34,
	0xe7, 0x6d, 0x0d, 0x77, 0x07, 0xa5, 0x4d, 0xb0, 0x8f, 0xa9, 0x38, 0x87, 0xbd, 0x3b, 0x15, 0x07,
	0x76, 0x07, 0x79, 0xa3, 0x62, 0x0b, 0x08, 0x2e, 0xe7, 0xb0, 0xe3, 0xf2, 0x59, 0xdc, 0xc0, 0xfe,
	0xa6, 0x79, 0xd9, 0xec, 0x14, 0x1a, 0x79, 0x39, 0xe3, 0x3b, 0xbd, 0x7a, 0x65, 0x37, 0x8b, 0x87,
	0xdf, 0x0e, 0xc0, 0x68, 0x85, 0xf0, 0x11, 0x5a, 0xa5, 0x07, 0xc0, 0xa3, 0xf2, 0xb5, 0xbf, 0x2f,
	0xd3, 0xe9, 0x56, 0xf0, 0x22, 0x82, 0xd8, 0xc2, 0x17, 0x68, 0xff, 0x8e, 0x87, 0xc7, 0xe5, 0x0b,
	0x95, 0x73, 0x76, 0xc4, 0x7f, 0x96, 0xa2, 0xf4, 0x5b, 0x93, 0x3f, 0xcf, 0xd5, 0x4f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x7c, 0x2e, 0xd5, 0x3a, 0x63, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DelegationClient is the client API for Delegation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DelegationClient interface {
	GetUserByID(ctx context.Context, in *GetUserByIDRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	FindUserByName(ctx context.Context, in *FindUserByNameRequest, opts ...grpc.CallOption) (*FindUserByNameResponse, error)
}

type delegationClient struct {
	cc *grpc.ClientConn
}

func NewDelegationClient(cc *grpc.ClientConn) DelegationClient {
	return &delegationClient{cc}
}

func (c *delegationClient) GetUserByID(ctx context.Context, in *GetUserByIDRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/delegation.Delegation/GetUserByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *delegationClient) FindUserByName(ctx context.Context, in *FindUserByNameRequest, opts ...grpc.CallOption) (*FindUserByNameResponse, error) {
	out := new(FindUserByNameResponse)
	err := c.cc.Invoke(ctx, "/delegation.Delegation/FindUserByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DelegationServer is the server API for Delegation service.
type DelegationServer interface {
	GetUserByID(context.Context, *GetUserByIDRequest) (*GetUserResponse, error)
	FindUserByName(context.Context, *FindUserByNameRequest) (*FindUserByNameResponse, error)
}

// UnimplementedDelegationServer can be embedded to have forward compatible implementations.
type UnimplementedDelegationServer struct {
}

func (*UnimplementedDelegationServer) GetUserByID(ctx context.Context, req *GetUserByIDRequest) (*GetUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByID not implemented")
}
func (*UnimplementedDelegationServer) FindUserByName(ctx context.Context, req *FindUserByNameRequest) (*FindUserByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUserByName not implemented")
}

func RegisterDelegationServer(s *grpc.Server, srv DelegationServer) {
	s.RegisterService(&_Delegation_serviceDesc, srv)
}

func _Delegation_GetUserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelegationServer).GetUserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delegation.Delegation/GetUserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelegationServer).GetUserByID(ctx, req.(*GetUserByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Delegation_FindUserByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUserByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelegationServer).FindUserByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delegation.Delegation/FindUserByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelegationServer).FindUserByName(ctx, req.(*FindUserByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Delegation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "delegation.Delegation",
	HandlerType: (*DelegationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserByID",
			Handler:    _Delegation_GetUserByID_Handler,
		},
		{
			MethodName: "FindUserByName",
			Handler:    _Delegation_FindUserByName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "delegation-service/delegation.proto",
}
